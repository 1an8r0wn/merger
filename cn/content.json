{"pages":[],"posts":[{"title":"部署","text":"merger 属于简单的 HTML 应用，故此你可以将它部署至任何能够托管静态网页的服务并通过一个域名访问。在这之前，请确定你已根据 配置 页面完成个人化设定。 以下为一些可能有用的链接： 部署至 GitHub Pages https://help.github.com/en/articles/fork-a-repo https://help.github.com/en/articles/configuring-a-publishing-source-for-github-pages https://help.github.com/en/articles/using-a-custom-domain-with-github-pages https://help.github.com/en/articles/adding-or-removing-a-custom-domain-for-your-github-pages-site 部署至 Ubuntu Server https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04-quickstart https://medium.com/@jgefroh/a-guide-to-using-nginx-for-static-websites-d96a9d034940 https://oneinstack.com https://nginx.org/en/docs/beginners_guide.html https://www.nginx.com/resources/wiki/start/topics/examples/full/ https://nginxconfig.io 部署至 Netlify https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/ https://www.netlify.com/docs/custom-domains/ 部署至 now.sh https://zeit.co/docs/v2/getting-started/introduction-to-now/ https://zeit.co/docs/v2/getting-started/installation/ https://zeit.co/docs/v2/deployments/basics/ https://zeit.co/docs/v2/domains-and-aliases/adding-a-domain 部署至 HeroKu https://devcenter.heroku.com/articles/git https://devcenter.heroku.com/articles/github-integration https://stackoverflow.com/questions/17558007/deploy-to-heroku-directly-from-my-github-repository https://devcenter.heroku.com/articles/custom-domains https://stackoverflow.com/questions/5480337/easy-way-to-prevent-heroku-idling","link":"/cn/docs/deploy.html"},{"title":"你好，认识下 Merger","text":"请知悉你可以通过以下链接返回本页面： https://docs.justhx.com/merger （自动语言检测） https://merger.justhx.com 你在这里了！Merger 的官方网站！你可以在这里找到有用的文档和博文。 还不熟悉？ 往下读就好。 概述背景只需扫一扫二维码，就已经完成支付 —— 国内同时支持的多种移动支付方式，让各式转账变得非常方便。 新的问题有的人喜欢支付宝，也有的人习惯使用微信支付。支付方式的多元化带来了新的问题：对于那些希望收取款项的人们，他们必须同时放置多个二维码以确保所有人都能够使用他们所喜爱的支付方式。比如这样： 有时候你用了错误的 app 扫描了别家的二维码，就会出现错误： Merger 是如何解决这些问题的Merger 来了：它是一个基于 HTML 的应用；简单却强大。它可以帮你把多个支付二维码合并为一条链接。这样付款人就可以专注于扫描一个二维码，或者打开一个简洁链接。 这个按钮会将用户导向至 https://donate.justhx.com；在那里他可以选择所有可用的支付方式。 我们负责优化，你负责在 5 分钟内配置好 merger，上传它至你的服务器，然后等待你的客户给你打钱。以一个更简洁的方式。 快速开始1234cd /path/to/the/directorywget https://github.com/hifocus/merger/archive/0.20.zipunzip 0.20.zip &amp;&amp; cd merger-0.20 &amp;&amp; mv * ../cd ../ &amp;&amp; mv merger.html index.html 更多信息：安装 配置1vim index.html 更多信息：配置 在使用过程中如果你遇到了任何问题，请提交一个 issue。请清晰地描述你的问题，这样其他人才能帮助你。 &gt;&gt;&gt; 前往 /docs 以了解关于安装、配置和部署的更多。","link":"/cn/posts/hello-get-to-know-merger.html"},{"title":"概述","text":"Merger 是一个基于 HTML 的应用；简单却强大。它可以帮你把多个支付二维码合并为一条链接。这样付款人就可以专注于扫描一个二维码，或者打开一个简洁链接。 阅读更多： 你好，认识下 Merger 你可以为你的 merger 生成一张二维码 (查看示例)，或者直接把你的 merger 链接发送给对方。merger 会通过 User Agent 识别对方的客户端，随即展示相应的内容。 自从 更新 0.20 以来，merger 首次支持了多语言、用途定义和自动页面标题和图标；这意味着你可以更为简便地配置 merger，而你的用户也会获得更好的使用体验。 特性 多语言支持。 最少的请求数，最快的速度。 详尽的代码注释，方便后续开发。 结合实际使用场景为每一种支付方式单独设计的展示样式。 高度可定制化，页面上一切内容均可通过预设的 Javascript 代码更改。无需任何编程技巧。 所有静态文件均默认通过开源 CDN jsDelivr 合并和分发。 演示站点请浏览：https://demo.qrcdn.com托管环境：Ubuntu 18.04.2 LTS | nginx/1.16.0 | Accelerated By CloudFlare | Hosted By Vultr 或者使用 手机相机 | QQ 手机版 | 微信 | 支付宝 扫描这个二维码 其他演示站点 https://pay.ryanc.cc 在这里提交你的 merger 站点以供展示 截图以下截图展示了在不同客户端下打开 merger 链接的样式。下载大图 社区 如果你在使用过程中发现了任何问题，请提交一个 Issue。 如果你希望让 merger 变得更好，欢迎提交 Pull Requests。 感谢 本文档使用 Docsify Hexo，在 GitHub Pages 上发布，托管于 Netlify，通过 CloudFlare 分发。使用 GNU General Public License v3.0。 本文档内的图片使用 upimg-cli 上传。 本项目的图标和展示横幅素材来自 zylbiubiubiu, Iconfont 本项目的部分 JavaScript 代码由 @LF112 贡献。 本项目基于 Grouper 项目（请参见 Grouper 的感谢列表）。 本项目也使用了以下项目 / 服务： Spectre.css JQuery lrsjng/jquery-qrcode jsDelivr Pure CSS3 Gradient Background Animation Iconfont.cn 在 GitHub 上编辑此页面。","link":"/cn/docs/introduction.html"},{"title":"配置","text":"merger 的配置十分简单。通常来说，你只要修改 merger.html 里面的 Config Section 即可配置你自己的 merger 页面。 在 GitHub.com 上浏览 Config Section 在 Config Section 内，每一个变量都会有详细的英文注释帮助你的配置。如果无法阅读，你依然可以参照本页面。 在 Config Section 所使用的 Javascirpt 代码里，每一行配置都需要以半角分号 ; 结尾。如果缺少或者填入了错误的分号，如全角分号 ；，Config Section 将无法运作。 Config Section 的格式为：var something = &quot;something_actual&quot; （定义 某物 = 实际值）。同样地，请勿忽略等于号 = 前后的空格以及 something_acutal 前后的半角双引号 &quot; &quot;。 配置用途在 Config Section 内，你需要首先定义 merger 的用途。 目前，我们提供两种用途：payment（付款）和 donate（捐款）。 12var usage = \"payment\";// var usage = \"donate\"; 提供这些变量是为了方便地标示页面的用途，例如：有人希望为博客的打赏通道创建一个 merger，此时就可以用 “donate” 变量；而有人希望为售卖的商品设立一个 merger 付款通道，此时就可以使用 “payment” 变量。 当不同的变量被设置，页面的显示文字也会随之改变。若 “多语言” 功能被禁用，此功能也会变为不可用。 配置支付链接在 Config Section 中，你需要定义自己的收款链接 - 将以下内容修改为自己的： 1234var wechat = \"wxp://f2f0xFuBE5tqPeKuwZxWkpE0CBf4-GkfwdpN\";var alipay = \"https://qr.alipay.com/fkx01299q4zug8xxsp2vc0a?t=1545238142543\";var tenpay = \"https://i.qianbao.qq.com/wallet/sqrcode.htm?m=tenpay&amp;f=wallet&amp;a=1&amp;ac=26E3D12F23952F04A9553D36B31F18BC3AEA141B073F9DD9BC3747C823819645&amp;u=1031092401&amp;n=惶心\";var paypal = \"https://paypal.me/hxco\"; 下列表格解释了各个变量的含义。 变量 代表 官方网站 链接样式 链接获取方式 wechat 微信 / 微信支付 https://weixin.qq.com wxp://{personalised-content} 解码支付二维码 alipay 支付宝 / 支付宝 https://www.alipay.com https://qr.alipay.com/{personalised-content} 解码支付二维码 tenpay 腾讯 QQ / QQ 钱包 https://im.qq.com https://i.qianbao.qq.com/{personalised-content} 解码支付二维码 paypal Paypal / 贝宝 https://www.paypal.com https://paypal.me/{username} 网页端获取 对于需要解码支付二维码获取支付链接的应用，请在应用内显示你的支付二维码，用内置保存功能 / 屏幕截图获取该二维码，随后使用二维码解码应用即可获取支付链接；你可以从搜索引擎获取一些二维码解码程序： https://www.google.com/search?q=qr+code+decoder https://www.baidu.com/s?wd=二维码解码 对于 Paypal，你需要到 https://paypal.me 生成个人支付链接。 !&gt; 如果你没有，或者不想展示以上四个收款方式的任意一个 / 数个，你可以删除或留空相应的变量。 如：我没有支付宝，且不希望展示我的 Paypal 收款地址： 1234var wechat = \"wxp://f2f0xFuBE5tqPeKuwZxWkpE0CBf4-GkfwdpN\";// Alipay removedvar tenpay = \"https://i.qianbao.qq.com/wallet/sqrcode.htm?m=tenpay&amp;f=wallet&amp;a=1&amp;ac=26E3D12F23952F04A9553D36B31F18BC3AEA141B073F9DD9BC3747C823819645&amp;u=1031092401&amp;n=惶心\";var paypal = \"\"; // Leave paypal to blank !&gt; 在没有设置任何有效付款方式时，浏览器 console 会显示一个红色的错误信息，而此时用户会被提示 “目前没有可用的支付方式”。 配置昵称和头像地址Config Section 下一部分需要填入昵称和头像地址。这部分如下所示： 123// Replace with your id and profile photo link ↓.var myname = \"惶心\";var profile = \"https://ae01.alicdn.com/kf/UTB8R57Nn0nJXKJkSaiyq6AhwXXak.jpg\"; var myname = &quot;xxx&quot; 部分需要填入你喜欢的任意昵称。var profile = &quot;xxx&quot; 部分需要填入你喜欢的头像的地址。如果你不知道怎么做，最简单的方式是将图片上传至图床，如 https://sm.ms，然后填入图床返回的地址，如： 1var profile = \"https://i.loli.net/2019/04/10/5cad38f6e8694.png\"; !&gt; 为了保证尽可能高的可用性，除非有绝对自信，否则不推荐自主托管头像图片文件。 ?&gt; 至此，你已经配置完成所有必要变量。 动态页面标题Merger 支持动态页面标题。此功能会将你于上方设置的昵称嵌入于页面标题中，让用户清晰地知道付款对象。 同时，branding 变量会自动在标题后加入 | Merger 后缀，说明此页面由 merger 驱动。但是，你可以自由选择是否显示这个后缀。将 branding 变量设置为 false 以禁用添加后缀。 12var branding = false; // Disable branding// var branding = true; 多语言Merger 支持多语言用户界面。此功能会检测用户的浏览器语言，从而以不同的语言显示页面文字（目前支持 简体中文、繁体中文、英语）。 多语言功能需要配置三个变量：myname_hans, myname_hant 和 myname_eng；分别为于简体中文、繁体中文和英语界面下显示的你的昵称。 你可以分别配置三个变量的内容；若你不希望指定任意语言的内容，将变量内容修改为 myname 即可；例如：var mayname_eng = myname 1234var multilingual = true; // Set variable to false to disable multilingual featurevar myname_hans = myname // Default setting for Chinese Simplified users; change it to a speicify value if neededvar myname_hant = \"惶心\"; // Choose how you want your name to be displayed for Traditional Chinese usersvar myname_eng = \"Focus Chen\"; // Choose how you want your name to be displayed for English / Non-Chinese users - ?&gt; 你也可以通过设置 var multilingual = false; 以禁用多语言。但是我们并不推荐。 配置引导文字!&gt; 仅在多语言功能被禁用时，这个部分才会生效 引导文字被用以引导访客进行下一步的操作；例如点击按钮，扫码等等。 默认的引导文字如下，你可以随意自定义： 12var title = \"选择你的支付方式\";var subtitle = \"跟随进一步的指示以向\" + myname + \"付款\"; 二维码接口Config Section 最后的部分为二维码应用程序接口（API）的选择。 merger 默认从 lrsjng/jquery-qrcode 本地生成所需的二维码，这样能够节省 HTTP 请求数和加快页面加载速度。然而，QQ 手机版无法解码 lrsjng/jquery-qrcode 默认生成 data:image 类型的二维码图片，故此这里仍然需要使用二维码接口（API）生成二维码以供解码。 1var qrcodeapi = \"https://www.zhihu.com/qrcode?url=\"; 你也可以自由使用你喜爱的接口。 !&gt; 通过非 HTTPS 调用（即 HTTP）的内容不会被加载。 修改 var qrcodeapi = &quot;https://www.zhihu.com/qrcode?url=&quot;; 部分即可更换调用的二维码 API。你可以从搜索引擎找到更多的二维码 API： https://www.google.com/search?q=qr+code+generate+api https://www.baidu.com/s?wd=二维码生成接口 ?&gt; 请注意，一般情况下无需替换二维码 API。此外，替换之前请确保 API 可用。 选择静态文件加载源merger 在 0.14 版本 为静态资源提供了在 jsDelivr CDN 和本地之间切换的选项。虽然 jsDelivr 毫无疑问在全球范围内都拥有优秀的加载速度，但是在某些特殊情况下使用者也许想要从本地加载静态资源。以下说明了如何切换静态文件加载源。 在 merger.html 的头部 {docsify-ignore}123456&lt;!-- Load style files from local --&gt;&lt;!-- &lt;link rel=\"stylesheet\" href=\"assets/styles/spectre.css/spectre.min.css\"&gt; &lt;link rel=\"stylesheet\" href=\"assets/styles/style.min.css\"&gt; --&gt;&lt;!-- Load style files from jsDelivr - Default --&gt;&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/combine/gh/picturepan2/spectre@0.5.7/dist/spectre.min.css,gh/hifocus/merger@0.14/assets/styles/style.min.css\"/&gt; 默认设定为使用 jsDelivr CDN 并且使用了文件合并功能。如果希望从本地加载对应的文件，请注释或者删除这行代码： 1&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/combine/gh/hifocus/merger@0.20/assets/styles/spectre.css/spectre-modified.min.css,gh/hifocus/merger@0.20/assets/styles/style.min.css\"&gt; 并反向注释（恢复）这两行代码： 12&lt;!-- &lt;link rel=\"stylesheet\" href=\"assets/styles/spectre.css/spectre-modified.min.css\"&gt;&lt;link rel=\"stylesheet\" href=\"assets/styles/style.css\"&gt; --&gt; 最终修改以后的头部如下： 123456&lt;!-- Load style files from local --&gt;&lt;link rel=\"stylesheet\" href=\"assets/styles/spectre.css/spectre-modified.min.css\"&gt;&lt;link rel=\"stylesheet\" href=\"assets/styles/style.css\"&gt;&lt;!-- Load style files from jsDelivr - Default --&gt;&lt;!-- &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/combine/gh/hifocus/merger@0.20/assets/styles/spectre.css/spectre-modified.min.css,gh/hifocus/merger@0.20/assets/styles/style.min.css\"&gt; --&gt; 在 merger.html 的尾部 {docsify-ignore}12345678910&lt;!-- Footer Scripts --&gt;&lt;!-- Please do not swap orders --&gt;&lt;!-- Load Javascript files from jsDelivr - Default --&gt;&lt;script src=\"https://cdn.jsdelivr.net/combine/gh/hifocus/merger@0.20/assets/js/jQuery/jquery.min.js,gh/hifocus/merger@0.20/assets/js/jquery-qrcode/jquery-qrcode.min.js,gh/hifocus/merger@0.20/assets/js/function.min.js,gh/hifocus/merger@0.20/assets/js/font_974919_xgtacm93vxp.min.js\"&gt;&lt;/script&gt; &lt;!-- Load Javascript files from local --&gt;&lt;!-- &lt;script src=\"assets/js/jQuery/jquery.min.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/jquery-qrcode/jquery-qrcode.min.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/dev-files/function.original.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/font_974919_xgtacm93vxp.js\"&gt;&lt;/script&gt; --&gt; 默认设定为使用 jsDelivr CDN 并且使用了文件合并功能。如果希望从本地加载对应的文件，请注释或者删除这行代码： 1&lt;script src=\"https://cdn.jsdelivr.net/combine/gh/hifocus/merger@0.20/assets/js/jQuery/jquery.min.js,gh/hifocus/merger@0.20/assets/js/jquery-qrcode/jquery-qrcode.min.js,gh/hifocus/merger@0.20/assets/js/function.min.js,gh/hifocus/merger@0.20/assets/js/font_974919_xgtacm93vxp.min.js\"&gt;&lt;/script&gt; 并反向注释（恢复）这两行代码： 1234&lt;!-- &lt;script src=\"assets/js/jQuery/jquery.min.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/jquery-qrcode/jquery-qrcode.min.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/dev-files/function.original.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/font_974919_xgtacm93vxp.js\"&gt;&lt;/script&gt; --&gt; 最终修改以后的尾部如下： 12345678910&lt;!-- Footer Scripts --&gt;&lt;!-- Please do not swap orders --&gt;&lt;!-- Load Javascript files from jsDelivr - Default --&gt;&lt;!-- &lt;script src=\"https://cdn.jsdelivr.net/combine/gh/hifocus/merger@0.20/assets/js/jQuery/jquery.min.js,gh/hifocus/merger@0.20/assets/js/jquery-qrcode/jquery-qrcode.min.js,gh/hifocus/merger@0.20/assets/js/function.min.js,gh/hifocus/merger@0.20/assets/js/font_974919_xgtacm93vxp.min.js\"&gt;&lt;/script&gt; --&gt; &lt;!-- Load Javascript files from local --&gt;&lt;script src=\"assets/js/jQuery/jquery.min.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/jquery-qrcode/jquery-qrcode.min.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/dev-files/function.original.js\"&gt;&lt;/script&gt;&lt;script src=\"assets/js/font_974919_xgtacm93vxp.js\"&gt;&lt;/script&gt; 至此，你已经将 merger 配置完毕。","link":"/cn/docs/configure.html"},{"title":"安装","text":"我们仅建议使用已经发布的版本，而非复制整个正在开发过程中的代码仓库。 在使用任何版本以前，请确保已经阅读相应的版本说明。 在开始以前?&gt; 我们强烈建议通过 Watch 功能订阅版本更新（Release Only)，以便获取后续更新并及时升级。 前往 GitHub.com 订阅 !&gt; 新版本发布后，你在 GitHub Settings 里指定的主要邮箱（Primary Email）将会收到一封提示邮件。 最新版本稳定版本：预发布版本： 获取稳定版本：https://github.com/hifocus/merger/releases/latest获取预发布版本：https://github.com/hifocus/merger/releases/tag/0.20 你可以通过以下链接下载相应的 merger 更新：最新版本 / 预发布版本 使用命令行你也可以通过以下命令下载相应的 merger 更新： 1wget https://github.com/hifocus/merger/archive/0.15.zip # latest 下载 merger 以后，你应当首先完成对 merger 的配置（详见 配置 页面），然后使用你喜爱的工具上传整个 merger 目录至你的服务器，完成部署（详见 部署)。","link":"/cn/docs/install.html"}],"tags":[],"categories":[{"name":"docs","slug":"docs","link":"/cn/categories/docs/"},{"name":"posts","slug":"posts","link":"/cn/categories/posts/"}]}